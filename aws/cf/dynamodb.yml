AWSTemplateFormatVersion: 2010-09-09

Description: DynamoDB table

Parameters:
  Env:
    Description: The environment name used in named conventions
    Type: String
    MinLength: 1
    MaxLength: 10
    AllowedPattern: '[0-9a-z-]*'
    ConstraintDescription: alpha-numeric string with dashes 1-10 characters in length

  Title:
    Description: Project title
    Type: String
    Default: Replace me with a real title

  KeyElementName:
    Description: HashType PrimaryKey Name
    Type: String
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: '1'
    MaxLength: '20'
    Default: Replace me with a field
    ConstraintDescription: must contain only alphanumeric characters

  RangeKeyElementName:
    Description: Sort PrimaryKey Name
    Type: String
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: '1'
    MaxLength: '20'
    Default: Replace me with a field
    ConstraintDescription: must contain only alphanumeric characters

  KeyElementType:
    Description: HashType PrimaryKey Type
    Type: String
    Default: S
    AllowedPattern: '[S|N]'
    MinLength: '1'
    MaxLength: '1'
    ConstraintDescription: must be either String or Number

  ProvisionReadCapacities:
    Type: Number
    Default: 2
    MinValue: 1
    MaxValue: 70
    Description: Read capacities for the table

  ProvisionWriteCapacities:
    Type: Number
    Default: 2
    MinValue: 1
    MaxValue: 70
    Description: Write capacities for the table

  AlarmLambdaName:
    Description: Name for alarm consumer lambda
    Type: String

Resources:
  MyDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: !Ref 'KeyElementName'
          AttributeType: !Ref 'KeyElementType'
        -
          AttributeName: !Ref 'RangeKeyElementName'
          AttributeType: !Ref 'KeyElementType'
      KeySchema:
        -
          AttributeName: !Ref 'KeyElementName'
          KeyType: 'HASH'
        -
          AttributeName: !Ref 'RangeKeyElementName'
          KeyType: 'RANGE'
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ProvisionReadCapacities
        WriteCapacityUnits: !Ref ProvisionWriteCapacities
      TableName: !Sub '${Env}-${Title}-activity-log'
      Tags:
        - Key: Name
          Value: !Sub ${Env}-${Title}-dynamodb
      TimeToLiveSpecification:
        AttributeName: 'ttl'
        Enabled: true
      SSESpecification:
        SSEEnabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  MyDynamoDBScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: !Sub '${Env}-${Title}-dynamodb-scaling-policy'
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:DescribeTable"
                  - "dynamodb:UpdateTable"
                  - "cloudwatch:PutMetricAlarm"
                  - "cloudwatch:DescribeAlarms"
                  - "cloudwatch:GetMetricStatistics"
                  - "cloudwatch:SetAlarmState"
                  - "cloudwatch:DeleteAlarms"
                Resource: "*"

  WriteCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 30
      MinCapacity: 2
      ResourceId: !Join ['/', ['table', !Ref MyDynamoDBTable]]
      RoleARN: !GetAtt MyDynamoDBScalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb

  WriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub '${Env}-${Title}-dynamodb-write-autoscaling'
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref WriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        ScaleInCooldown: 30
        ScaleOutCooldown: 30
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  ReadCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 50
      MinCapacity: 1
      ResourceId: !Join ['/', ['table', !Ref MyDynamoDBTable]]
      RoleARN: !GetAtt MyDynamoDBScalingRole.Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb

  ReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: !Sub '${Env}-${Title}-dynamodb-read-autoscaling'
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        ScaleInCooldown: 30
        ScaleOutCooldown: 30
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization

  AlarmsTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: !Sub '${Env}-${Title}-alarms'
      Subscription:
        - Endpoint: !Sub ${Env}-alarm-consumer-lambda-arn
          Protocol: 'lambda'

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: lambda:InvokeFunction
      Principal: 'sns.amazonaws.com'
      SourceArn: !Ref AlarmsTopic
      FunctionName: !Ref AlarmLambdaName

  ReadThrottleEventsAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Reads are throttled. Lower ReadCapacityUnitsUtilizationTarget or increase MaxReadCapacityUnits.'
      Namespace: 'AWS/DynamoDB'
      MetricName: ReadThrottleEvents
      Dimensions:
        - Name: TableName
          Value: !Ref MyDynamoDBTable
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref AlarmsTopic
      OKActions:
        - !Ref AlarmsTopic

  WriteThrottleEventsAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Writes are throttled. Lower WriteCapacityUnitsUtilizationTarget or increase MaxWriteCapacityUnits.'
      Namespace: 'AWS/DynamoDB'
      MetricName: WriteThrottleEvents
      Dimensions:
        - Name: TableName
          Value: !Ref MyDynamoDBTable
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref AlarmsTopic
      OKActions:
        - !Ref AlarmsTopic

Outputs:
  MyDynamoDBTableName:
    Description: A description for your table
    Value: !Ref MyDynamoDBTable
    Export:
      Name: !Sub ${Env}-${Title}-name
