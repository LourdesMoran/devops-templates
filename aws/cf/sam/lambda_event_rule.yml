AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Lambda scheduled to run perdiodically as a CW event rule and a custom CW Alarm

Parameters:
  Env:
    Description: The environment name used in named conventions
    Type: String
    MinLength: 1
    MaxLength: 10
    AllowedPattern: '[0-9a-z-]*'
    ConstraintDescription: alpha-numeric string with dashes 1-10 characters in length

  Title:
    Description: Project title
    Type: String
    Default: Replace me with a real title

Resources:

  MyLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main
      CodeUri: ../../main.zip
      Runtime: go1.x
      Description:  work handler
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${Env}-${Title}-ecs-sg
        SubnetIds:
          - Fn::ImportValue: !Sub ${Env}-vpc-subnet-private1
          - Fn::ImportValue: !Sub ${Env}-vpc-subnet-private3
      Environment:
        Variables:
          S3_BUCKET: !Sub ${Env}-deployment
      FunctionName: !Sub ${Env}-${Title}
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/${Env}-${Title}-role
      MemorySize: 128
      Timeout: 200

  MyLambdaEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Periodic runs of MyLambda
      Name: !Sub ${Env}-${Title}-rule
      ScheduleExpression: "rate(1 minute)"
      State: ENABLED
      Targets:
        -
          Arn: !GetAtt MyLambda.Arn
          Id: !Sub ${Env}-${Title}
          Input: '[{"IsTimeCheck": true}]'

  MyLambdaEventRulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub ${Env}-${Title}
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt MyLambdaEventRule.Arn

  AlarmsTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: !Sub '${Env}-lambda-${Title}-alarms'
      Subscription:
        - Endpoint:
            Fn::ImportValue: !Sub ${Env}-alarm-consumer-lambda-arn
          Protocol: 'lambda'

  LambdaInvocationRateAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: !Sub '${Env}-${Title}-invocations-rate'
      AlarmDescription: Lambda Invocation Rate increased too fast for too long (700 per minute)
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlarmsTopic
      Metrics:
        - Id: "e1"
          Expression: "RATE(m0)*60 > 700"
          Label: !Sub '${Env}-${Title}-invocations-rate'
          ReturnData: true
        - Id: "m0"
          MetricStat:
            Metric:
              Namespace: "AWS/Lambda"
              MetricName: Invocations
              Dimensions:
                - Name:  'FunctionName'
                  Value: !Ref MyLambda
            Period: 60
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: 1
      Threshold: 1.0
      ComparisonOperator: GreaterThanOrEqualToThreshold

Outputs:
  MyLambdaArn:
    Description: Logentries  - lambda arn
    Value: !Ref MyLambda
